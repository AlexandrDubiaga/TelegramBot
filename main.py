import telebot
from telebot import types
import datetime
import os
from dotenv import load_dotenv

load_dotenv()  # –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env —Ñ–∞–π–ª—É

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = telebot.TeleBot(BOT_TOKEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (ReplyKeyboard)
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row(
    types.KeyboardButton("–ß–∞—Ç –∑ —Ñ–∞—Ö—ñ–≤—Ü–µ–º"),
    types.KeyboardButton("–î–∑–≤—ñ–Ω–æ–∫ —Ñ–∞—Ö—ñ–≤—Ü—é"),
    types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç–∏ –ª–∏—Å—Ç–∞")
)
main_menu.row(
    types.KeyboardButton("–ü–æ—Å–ª—É–≥–∏"),
    types.KeyboardButton("–ù–∞—à —Å–∞–π—Ç"),
    types.KeyboardButton("–ö–∞—Ä—Ç–∞ –≥—Ä–æ–º–∞–¥")
)
main_menu.row(
    types.KeyboardButton("–¶—ñ–Ω–∏"),
    types.KeyboardButton("–ê–¥—Ä–µ—Å–∏"),
    types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç–∏")
)



@bot.message_handler(commands=['start'])
def start(message):
    user_name = message.from_user.first_name
    user_id = message.from_user.id
    time_now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    with open("start_log.txt", "a", encoding="utf-8") as file:
        file.write(f"{time_now} - {user_name} (ID: {user_id}) –Ω–∞—Ç–∏—Å–Ω—É–≤ /start\n")

        # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¢–Ü–õ–¨–ö–ò –∞–¥–º—ñ–Ω—É
        if user_id != ADMIN_ID:
            try:
                bot.send_message(
                    ADMIN_ID,
                    f"üîî –ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–≤:\nüë§ {user_name} (ID: {user_id})\nüïí {time_now}"
                )
            except Exception as e:
                print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—É: {e}")


    bot.send_message(
        message.chat.id,
        f'–í–∞—Å –≤—ñ—Ç–∞—î, –ö–ü "–ú–ú–ë–¢–Ü". {user_name}, –æ–±–µ—Ä—ñ—Ç—å, —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:',
        reply_markup=main_menu
    )

@bot.message_handler(commands=['chat'])
def handle_chat(message):
    send_chat_link(message)

@bot.message_handler(commands=['call'])
def handle_call(message):
    send_call_info(message)

@bot.message_handler(commands=['email'])
def handle_email(message):
    send_email_link(message)

@bot.message_handler(commands=['services'])
def handle_services(message):
    send_services_link(message)

@bot.message_handler(commands=['website'])
def handle_website(message):
    send_website_link(message)

@bot.message_handler(commands=['map'])
def handle_map(message):
    send_map_link(message)

@bot.message_handler(commands=['prices'])
def handle_prices(message):
    send_price_link(message)

@bot.message_handler(commands=['addresses'])
def handle_addresses(message):
    send_address_link(message)

@bot.message_handler(commands=['contacts'])
def handle_contacts(message):
    send_contact_info(message)


@bot.message_handler(func=lambda message: message.text == '–ß–∞—Ç –∑ —Ñ–∞—Ö—ñ–≤—Ü–µ–º')
def send_chat_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–ó–≤'—è–∑–∞—Ç–∏—Å—å –∑ —Ñ–∞—Ö—ñ–≤—Ü–µ–º", url='http://t.me/OFFICE_MMBTI/')
    markup.add(button)
    bot.send_message(message.chat.id, "–†–æ–∑–ø–æ—á–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–î–∑–≤—ñ–Ω–æ–∫ —Ñ–∞—Ö—ñ–≤—Ü—é')
def send_call_info(message):
    bot.send_message(
        message.chat.id,
        '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ñ–∞—Ö—ñ–≤—Ü—è:\nüìû +380981871050\n\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –Ω–æ–º–µ—Ä –¥–ª—è –¥–∑–≤—ñ–Ω–∫–∞ (–∑ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –ø—Ä–∏—Å—Ç—Ä–æ—é).'
    )


@bot.message_handler(func=lambda message: message.text == '–ù–∞–ø–∏—Å–∞—Ç–∏ –ª–∏—Å—Ç–∞')
def send_email_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç–∏ –ª–∏—Å—Ç–∞", url='http://mmbti.com.ua/contact/#contact-id')
    markup.add(button)
    bot.send_message(message.chat.id, "–ó–∞–ª–∏—à–∏—Ç–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ü–æ—Å–ª—É–≥–∏')
def send_services_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø–æ—Å–ª—É–≥–∏", url='http://mmbti.com.ua/works/#works')
    markup.add(button)
    bot.send_message(message.chat.id, "–ù–∞—à—ñ –ø–æ—Å–ª—É–≥–∏:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ù–∞—à —Å–∞–π—Ç')
def send_website_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url='http://mmbti.com.ua/')
    markup.add(button)
    bot.send_message(message.chat.id, "–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ö–∞—Ä—Ç–∞ –≥—Ä–æ–º–∞–¥')
def send_map_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–∞—Ä—Ç—É", url='http://mmbti.com.ua/#main-map')
    markup.add(button)
    bot.send_message(message.chat.id, "–ö–∞—Ä—Ç–∞ –≥—Ä–æ–º–∞–¥:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–¶—ñ–Ω–∏')
def send_price_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Ü—ñ–Ω", url='http://mmbti.com.ua/price/#prices')
    markup.add(button)
    bot.send_message(message.chat.id, "–¶—ñ–Ω–∏ –Ω–∞ –ø–æ—Å–ª—É–≥–∏:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ê–¥—Ä–µ—Å–∏')
def send_address_link(message):
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–î–∏–≤–∏—Ç–∏—Å—å –∞–¥—Ä–µ—Å–∏", url='http://mmbti.com.ua/adress/#adress')
    markup.add(button)
    bot.send_message(message.chat.id, "–ù–∞—à—ñ –∞–¥—Ä–µ—Å–∏:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ö–æ–Ω—Ç–∞–∫—Ç–∏')
def send_contact_info(message):
    contact_text = (
        "<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω–∏ –¥–ª—è –∑–≤'—è–∑–∫—É:</b>\n\n"
        "üì± <b>–ú–æ–±—ñ–ª—å–Ω–∏–π:</b> +380981871050\n"
        "üìç <b>–ü—Ä–∏–π–º–∞–ª—å–Ω—è:</b> +380512470781\n"
        "üõ† <b>–ì–æ–ª–æ–≤. —ñ–Ω–∂–µ–Ω–µ—Ä:</b> +380512470781\n"
        "üíº <b>–ì–æ–ª–æ–≤. –±—É—Ö–≥–∞–ª—Ç–µ—Ä:</b> +380512471506\n"
        "üßæ <b>–°—Ç—ñ–ª –∑–∞–º–æ–≤–ª–µ–Ω—å:</b> +380512722132\n"
        "üë• <b>–ü—Ä–∏–π–æ–º –≥—Ä–æ–º–∞–¥—è–Ω:</b> +380512470967\n\n"
        "‚úâÔ∏è <b>Email:</b> office@mmbti.com.ua"
    )
    bot.send_message(message.chat.id, contact_text, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text in ['–ü—Ä–∏–≤—ñ—Ç', '–î–æ–±—Ä–∏–π –¥–µ–Ω—å', '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–î–æ–±—Ä—ã–π –¥–µ–Ω—å', '–í—ñ—Ç–∞—é'])
def greet_user(message):
    bot.send_message(
        message.chat.id,
        "–í—ñ—Ç–∞—î–º–æ –≤–∞—Å!\n–û–±–µ—Ä—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞, —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å",
        reply_markup=main_menu
    )


@bot.message_handler(func=lambda message: True)
def unknown_message(message):
    bot.send_message(
        message.chat.id,
        f"{message.from_user.first_name}, —è –≤–∞—Å –Ω–µ —Ä–æ–∑—É–º—ñ—é! –û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—Å–ª—É–≥—É:",
        reply_markup=main_menu
    )





# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.remove_webhook()
bot.polling(none_stop=True)

